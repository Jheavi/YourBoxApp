{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"E:\\\\Javier\\\\Visual Studio projects\\\\javi-final-project\\\\client\\\\src\\\\components\\\\Workout\\\\FormModifyWorkout\\\\FormModifyWorkout.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { Picker } from '@react-native-picker/picker';\nimport { updateWorkout } from \"../../../redux/actions/workoutActions\";\nimport formWorkoutStyles from \"./FormModifyWorkout\";\n\nfunction FormModifyWorkout(_ref) {\n  var workout = _ref.workout,\n      dispatch = _ref.dispatch,\n      todayString = _ref.todayString,\n      displayedDay = _ref.displayedDay,\n      setModalVisible = _ref.setModalVisible;\n\n  var _useState = useState(workout == null ? void 0 : workout.title),\n      _useState2 = _slicedToArray(_useState, 2),\n      titleValue = _useState2[0],\n      setTitleValue = _useState2[1];\n\n  var _useState3 = useState((workout == null ? void 0 : workout.type) || 'For Time'),\n      _useState4 = _slicedToArray(_useState3, 2),\n      typeValue = _useState4[0],\n      setTypeValue = _useState4[1];\n\n  var _useState5 = useState(workout == null ? void 0 : workout.description),\n      _useState6 = _slicedToArray(_useState5, 2),\n      descriptionValue = _useState6[0],\n      setDescriptionValue = _useState6[1];\n\n  var noWorkout = 'There is no workout for the selected day';\n  useEffect(function () {\n    if (workout) {\n      setDescriptionValue(workout.description);\n      setTitleValue(workout.title);\n    } else {\n      setDescriptionValue(noWorkout);\n    }\n  }, [workout]);\n  return React.createElement(View, {\n    style: formWorkoutStyles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: formWorkoutStyles.innerContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, React.createElement(TextInput, {\n    style: formWorkoutStyles.titleText,\n    value: titleValue,\n    placeholder: \"Enter the title\",\n    testID: \"inputTitle\",\n    onChangeText: function onChangeText(text) {\n      return setTitleValue(text);\n    },\n    autoCorrect: false,\n    multiline: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }), React.createElement(Picker, {\n    style: formWorkoutStyles.picker,\n    selectedValue: typeValue,\n    onValueChange: function onValueChange(itemValue) {\n      return setTypeValue(itemValue);\n    },\n    testID: \"picker\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, React.createElement(Picker.Item, {\n    color: \"#0d0d0d\",\n    label: \"For Time\",\n    value: \"For Time\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }), React.createElement(Picker.Item, {\n    color: \"#0d0d0d\",\n    label: \"AMRAP\",\n    value: \"AMRAP\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }), React.createElement(Picker.Item, {\n    color: \"#0d0d0d\",\n    label: \"EMOM\",\n    value: \"EMOM\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  })), React.createElement(TextInput, {\n    style: formWorkoutStyles.descriptionText,\n    value: descriptionValue,\n    placeholder: \"Enter the workout\",\n    testID: \"inputDescription\",\n    onChangeText: function onChangeText(text) {\n      return setDescriptionValue(text);\n    },\n    multiline: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: {\n      marginBottom: 30,\n      width: 'auto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, React.createElement(Button, {\n    title: \"Save changes\",\n    color: \"#14680c\",\n    testID: \"saveButton\",\n    onPress: function onPress() {\n      dispatch(updateWorkout(displayedDay || todayString, descriptionValue, titleValue, typeValue));\n      setModalVisible(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }))));\n}\n\nfunction mapStateToProps(state) {\n  return {\n    workout: state.workoutReducer.workout\n  };\n}\n\nexport default connect(mapStateToProps)(FormModifyWorkout);","map":{"version":3,"sources":["E:/Javier/Visual Studio projects/javi-final-project/client/src/components/Workout/FormModifyWorkout/FormModifyWorkout.tsx"],"names":["React","useEffect","useState","connect","Picker","updateWorkout","formWorkoutStyles","FormModifyWorkout","workout","dispatch","todayString","displayedDay","setModalVisible","title","titleValue","setTitleValue","type","typeValue","setTypeValue","description","descriptionValue","setDescriptionValue","noWorkout","container","innerContainer","titleText","text","picker","itemValue","descriptionText","marginBottom","width","mapStateToProps","state","workoutReducer"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { View, Button, TextInput } from 'react-native'\r\nimport { Picker } from '@react-native-picker/picker'\r\nimport { updateWorkout } from '../../../redux/actions/workoutActions'\r\nimport formWorkoutStyles from './FormModifyWorkout'\r\n\r\nfunction FormModifyWorkout ({ workout, dispatch, todayString, displayedDay, setModalVisible }: any) {\r\n  const [titleValue, setTitleValue] = useState(workout?.title)\r\n  const [typeValue, setTypeValue] = useState(workout?.type || 'For Time')\r\n  const [descriptionValue, setDescriptionValue] = useState(workout?.description)\r\n  const noWorkout = 'There is no workout for the selected day'\r\n\r\n  useEffect(() => {\r\n    if (workout) {\r\n      setDescriptionValue(workout.description)\r\n      setTitleValue(workout.title)\r\n    } else {\r\n      setDescriptionValue(noWorkout)\r\n    }\r\n  }, [workout])\r\n\r\n  return (\r\n    <View style={formWorkoutStyles.container}>\r\n      <View style={formWorkoutStyles.innerContainer}>\r\n        <TextInput\r\n          style={formWorkoutStyles.titleText}\r\n          value={titleValue}\r\n          placeholder=\"Enter the title\"\r\n          testID=\"inputTitle\"\r\n          onChangeText={text => setTitleValue(text)}\r\n          autoCorrect={false}\r\n          multiline={true}\r\n        />\r\n        <Picker\r\n          style={formWorkoutStyles.picker}\r\n          selectedValue={typeValue}\r\n          onValueChange={(itemValue) =>\r\n            setTypeValue(itemValue)\r\n          }\r\n          testID=\"picker\"\r\n        >\r\n          <Picker.Item color=\"#0d0d0d\" label=\"For Time\" value=\"For Time\" />\r\n          <Picker.Item color=\"#0d0d0d\" label=\"AMRAP\" value=\"AMRAP\" />\r\n          <Picker.Item color=\"#0d0d0d\" label=\"EMOM\" value=\"EMOM\" />\r\n        </Picker>\r\n        <TextInput\r\n          style={formWorkoutStyles.descriptionText}\r\n          value={descriptionValue}\r\n          placeholder=\"Enter the workout\"\r\n          testID=\"inputDescription\"\r\n          onChangeText={text => setDescriptionValue(text)}\r\n          multiline={true}\r\n        />\r\n        <View style={{ marginBottom: 30, width: 'auto' }}>\r\n          <Button\r\n            title=\"Save changes\"\r\n            color=\"#14680c\"\r\n            testID=\"saveButton\"\r\n            onPress={() => {\r\n              dispatch(updateWorkout(\r\n                displayedDay || todayString,\r\n                descriptionValue,\r\n                titleValue,\r\n                typeValue))\r\n              setModalVisible(false)\r\n            }}\r\n          />\r\n        </View>\r\n      </View>\r\n    </View>\r\n  )\r\n}\r\n\r\nfunction mapStateToProps (state: any) {\r\n  return {\r\n    workout: state.workoutReducer.workout\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(FormModifyWorkout)\r\n"]},"metadata":{},"sourceType":"module"}