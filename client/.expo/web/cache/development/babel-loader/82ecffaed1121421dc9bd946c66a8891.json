{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"E:\\\\Javier\\\\Visual Studio projects\\\\javi-final-project\\\\client\\\\src\\\\components\\\\Workout\\\\Workout.tsx\";\nimport React, { useEffect, useRef, useState } from 'react';\nimport { connect } from 'react-redux';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Modal from 'react-native-modal';\nimport { Calendar } from 'react-native-calendars';\nimport { loadWorkout } from \"../../redux/actions/workoutActions\";\nimport { extractDataFromTodayDate, extractDataFromDate } from \"../../utils/dateFunctions\";\nimport PropTypes from 'prop-types';\nimport FormModifyWorkout from \"./FormModifyWorkout/FormModifyWorkout\";\nimport { workoutStyle, calendarTheme } from \"./workoutStyle\";\nvar image = {\n  uri: 'https://images.pexels.com/photos/2261477/pexels-photo-2261477.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940'\n};\nvar styles = StyleSheet.create(workoutStyle);\n\nfunction Workout(_ref) {\n  var workout = _ref.workout,\n      dispatch = _ref.dispatch;\n\n  var _extractDataFromToday = extractDataFromTodayDate(),\n      todayString = _extractDataFromToday.todayString;\n\n  var _useState = useState(todayString),\n      _useState2 = _slicedToArray(_useState, 2),\n      displayedDay = _useState2[0],\n      setDisplayedDay = _useState2[1];\n\n  var _useState3 = useState(extractDataFromDate(displayedDay)),\n      _useState4 = _slicedToArray(_useState3, 2),\n      formattedDate = _useState4[0],\n      setFormattedDate = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      modalVisible = _useState6[0],\n      setModalVisible = _useState6[1];\n\n  var noWorkout = 'There is no workout for the selected day';\n  var scrollRef = useRef(null);\n  useEffect(function () {\n    dispatch(loadWorkout(todayString));\n  }, []);\n  useEffect(function () {\n    if (workout) {\n      setDisplayedDay(workout.date);\n    }\n  }, [workout]);\n  useEffect(function () {\n    if (displayedDay) {\n      setFormattedDate(extractDataFromDate(displayedDay));\n    }\n  }, [displayedDay]);\n\n  function scrollToStart() {\n    if (scrollRef.current) {\n      scrollRef.current.scrollTo({\n        x: 0,\n        y: 0,\n        animated: true\n      });\n    }\n  }\n\n  function onDayPress(day) {\n    dispatch(loadWorkout(day.dateString));\n    setDisplayedDay(day.dateString);\n    scrollToStart();\n  }\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, React.createElement(ScrollView, {\n    contentContainerStyle: styles.scrollContent,\n    scrollEnabled: true,\n    ref: scrollRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.dayText,\n    testID: \"workoutDate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, formattedDate && formattedDate.day + \"/\" + formattedDate.month + \"/\" + formattedDate.year), React.createElement(View, {\n    style: styles.square,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, React.createElement(ImageBackground, {\n    source: image,\n    style: styles.image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }), React.createElement(TouchableWithoutFeedback, {\n    onPress: function onPress() {\n      setModalVisible(!modalVisible);\n    },\n    testID: \"touchableForModal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: styles.workoutTextView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.workoutTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 15\n    }\n  }, workout && workout.title), React.createElement(Text, {\n    style: styles.workoutType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 15\n    }\n  }, workout ? workout.type : noWorkout), React.createElement(Text, {\n    style: styles.workoutText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 15\n    }\n  }, workout && workout.description), React.createElement(Modal, {\n    testID: \"workoutModal\",\n    style: styles.modal,\n    animationIn: \"bounceIn\",\n    isVisible: modalVisible,\n    onBackButtonPress: function onBackButtonPress() {\n      setModalVisible(false);\n    },\n    onBackdropPress: function onBackdropPress() {\n      setModalVisible(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 15\n    }\n  }, React.createElement(FormModifyWorkout, {\n    todayString: todayString,\n    displayedDay: displayedDay,\n    setModalVisible: setModalVisible,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }))))), React.createElement(View, {\n    style: {\n      marginBottom: 30,\n      width: '80%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, React.createElement(Calendar, {\n    theme: calendarTheme,\n    firstDay: 1,\n    onDayPress: onDayPress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }))));\n}\n\nWorkout.propTypes = {\n  dispatch: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    workout: state.workoutReducer.workout\n  };\n}\n\nexport default connect(mapStateToProps)(Workout);","map":{"version":3,"sources":["E:/Javier/Visual Studio projects/javi-final-project/client/src/components/Workout/Workout.tsx"],"names":["React","useEffect","useRef","useState","connect","Modal","Calendar","loadWorkout","extractDataFromTodayDate","extractDataFromDate","PropTypes","FormModifyWorkout","workoutStyle","calendarTheme","image","uri","styles","StyleSheet","create","Workout","workout","dispatch","todayString","displayedDay","setDisplayedDay","formattedDate","setFormattedDate","modalVisible","setModalVisible","noWorkout","scrollRef","date","scrollToStart","current","scrollTo","x","y","animated","onDayPress","day","dateString","container","scrollContent","dayText","month","year","square","workoutTextView","workoutTitle","title","workoutType","type","workoutText","description","modal","marginBottom","width","propTypes","func","isRequired","mapStateToProps","state","workoutReducer"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { StyleSheet, View, ScrollView, ImageBackground, Text, TouchableWithoutFeedback } from 'react-native'\r\nimport Modal from 'react-native-modal'\r\nimport { Calendar, DateObject } from 'react-native-calendars'\r\nimport { loadWorkout } from '../../redux/actions/workoutActions'\r\nimport { extractDataFromTodayDate, extractDataFromDate } from '../../utils/dateFunctions'\r\nimport PropTypes from 'prop-types'\r\nimport FormModifyWorkout from './FormModifyWorkout/FormModifyWorkout'\r\nimport { props } from '../../interfaces/interfaces'\r\nimport { workoutStyle, calendarTheme } from './workoutStyle'\r\n\r\nconst image = { uri: 'https://images.pexels.com/photos/2261477/pexels-photo-2261477.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940' }\r\n\r\nconst styles = StyleSheet.create(workoutStyle)\r\n\r\nfunction Workout ({ workout, dispatch }: props) {\r\n  const { todayString } = extractDataFromTodayDate()\r\n  const [displayedDay, setDisplayedDay] = useState(todayString)\r\n  const [formattedDate, setFormattedDate] = useState(extractDataFromDate(displayedDay))\r\n  const [modalVisible, setModalVisible] = useState(false)\r\n  const noWorkout = 'There is no workout for the selected day'\r\n  const scrollRef = useRef<ScrollView>(null)\r\n\r\n  useEffect(() => {\r\n    dispatch(loadWorkout(todayString))\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (workout) {\r\n      setDisplayedDay(workout.date)\r\n    }\r\n  }, [workout])\r\n\r\n  useEffect(() => {\r\n    if (displayedDay) {\r\n      setFormattedDate(extractDataFromDate(displayedDay))\r\n    }\r\n  }, [displayedDay])\r\n\r\n  function scrollToStart () {\r\n    if (scrollRef.current) {\r\n      scrollRef.current.scrollTo({\r\n        x: 0,\r\n        y: 0,\r\n        animated: true\r\n      })\r\n    }\r\n  }\r\n\r\n  function onDayPress (day: DateObject) {\r\n    dispatch(loadWorkout(day.dateString))\r\n    setDisplayedDay(day.dateString)\r\n    scrollToStart()\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <ScrollView\r\n        contentContainerStyle={styles.scrollContent}\r\n        scrollEnabled={true}\r\n        ref={scrollRef}\r\n      >\r\n        <Text style={styles.dayText} testID=\"workoutDate\">{formattedDate && `${formattedDate.day}/${formattedDate.month}/${formattedDate.year}`}</Text>\r\n        <View style={styles.square}>\r\n          <ImageBackground source={image} style={styles.image} />\r\n          <TouchableWithoutFeedback onPress={() => { setModalVisible(!modalVisible) }} testID=\"touchableForModal\">\r\n            <View style={styles.workoutTextView}>\r\n              <Text style={styles.workoutTitle}>{workout && workout.title}</Text>\r\n              <Text style={styles.workoutType}>{workout ? workout.type : noWorkout}</Text>\r\n              <Text style={styles.workoutText}>{workout && workout.description}</Text>\r\n              <Modal\r\n                testID=\"workoutModal\"\r\n                style={styles.modal}\r\n                animationIn=\"bounceIn\"\r\n                isVisible={modalVisible}\r\n                onBackButtonPress={() => { setModalVisible(false) }}\r\n                onBackdropPress={() => { setModalVisible(false) }}\r\n                >\r\n                <FormModifyWorkout todayString={todayString} displayedDay={displayedDay} setModalVisible={setModalVisible}/>\r\n              </Modal>\r\n            </View>\r\n          </TouchableWithoutFeedback>\r\n        </View>\r\n        <View style={{ marginBottom: 30, width: '80%' }}>\r\n          <Calendar\r\n            theme={calendarTheme}\r\n            firstDay={1}\r\n            onDayPress={onDayPress}\r\n          />\r\n        </View>\r\n      </ScrollView>\r\n    </View>\r\n  )\r\n}\r\n\r\nWorkout.propTypes = {\r\n  dispatch: PropTypes.func.isRequired\r\n}\r\n\r\nfunction mapStateToProps (state: any) {\r\n  return {\r\n    workout: state.workoutReducer.workout\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Workout)\r\n"]},"metadata":{},"sourceType":"module"}