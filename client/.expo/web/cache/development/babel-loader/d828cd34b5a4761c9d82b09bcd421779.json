{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport * as defaultStyle from \"../../../style\";\nvar STYLESHEET_ID = 'stylesheet.day.basic';\nexport default function styleConstructor() {\n  var theme = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var appStyle = _objectSpread(_objectSpread({}, defaultStyle), theme);\n\n  return StyleSheet.create(_objectSpread({\n    container: {\n      alignSelf: 'stretch'\n    },\n    base: {\n      width: 32,\n      height: 32,\n      alignItems: 'center'\n    },\n    text: {\n      marginTop: Platform.OS === 'android' ? 4 : 6,\n      fontSize: appStyle.textDayFontSize,\n      fontFamily: appStyle.textDayFontFamily,\n      fontWeight: appStyle.textDayFontWeight,\n      color: appStyle.dayTextColor,\n      backgroundColor: 'rgba(255, 255, 255, 0)'\n    },\n    alignedText: {\n      marginTop: Platform.OS === 'android' ? 4 : 6\n    },\n    selected: {\n      backgroundColor: appStyle.selectedDayBackgroundColor,\n      borderRadius: 16\n    },\n    today: {\n      backgroundColor: appStyle.todayBackgroundColor\n    },\n    todayText: {\n      color: appStyle.todayTextColor\n    },\n    selectedText: {\n      color: appStyle.selectedDayTextColor\n    },\n    disabledText: {\n      color: appStyle.textDisabledColor\n    },\n    dot: {\n      height: 4,\n      marginVertical: 1,\n      opacity: 0\n    },\n    leftFiller: {\n      width: 4,\n      height: 4,\n      marginTop: 1,\n      marginRight: -2\n    },\n    rightFiller: {\n      width: 4,\n      height: 4,\n      marginTop: 1,\n      marginLeft: -2\n    },\n    rounded: {\n      borderRadius: 2\n    },\n    visibleDot: {\n      opacity: 1,\n      backgroundColor: appStyle.dotColor\n    },\n    selectedDot: {\n      backgroundColor: appStyle.selectedDotColor\n    },\n    startingPeriod: {\n      width: 18,\n      height: 4,\n      marginTop: 1,\n      borderRadius: 2,\n      opacity: 0\n    }\n  }, theme[STYLESHEET_ID] || {}));\n}","map":{"version":3,"sources":["E:/Javier/Visual Studio projects/javi-final-project/client/node_modules/react-native-calendars/src/calendar/day/multi-period/style.js"],"names":["defaultStyle","STYLESHEET_ID","styleConstructor","theme","appStyle","StyleSheet","create","container","alignSelf","base","width","height","alignItems","text","marginTop","Platform","OS","fontSize","textDayFontSize","fontFamily","textDayFontFamily","fontWeight","textDayFontWeight","color","dayTextColor","backgroundColor","alignedText","selected","selectedDayBackgroundColor","borderRadius","today","todayBackgroundColor","todayText","todayTextColor","selectedText","selectedDayTextColor","disabledText","textDisabledColor","dot","marginVertical","opacity","leftFiller","marginRight","rightFiller","marginLeft","rounded","visibleDot","dotColor","selectedDot","selectedDotColor","startingPeriod"],"mappings":";;;;;;;;AACA,OAAO,KAAKA,YAAZ;AAGA,IAAMC,aAAa,GAAG,sBAAtB;AAEA,eAAe,SAASC,gBAAT,GAAsC;AAAA,MAAZC,KAAY,uEAAJ,EAAI;;AACnD,MAAMC,QAAQ,mCAAOJ,YAAP,GAAwBG,KAAxB,CAAd;;AACA,SAAOE,UAAU,CAACC,MAAX;AACLC,IAAAA,SAAS,EAAE;AACTC,MAAAA,SAAS,EAAE;AADF,KADN;AAILC,IAAAA,IAAI,EAAE;AACJC,MAAAA,KAAK,EAAE,EADH;AAEJC,MAAAA,MAAM,EAAE,EAFJ;AAGJC,MAAAA,UAAU,EAAE;AAHR,KAJD;AASLC,IAAAA,IAAI,EAAE;AACJC,MAAAA,SAAS,EAAEC,QAAQ,CAACC,EAAT,KAAgB,SAAhB,GAA4B,CAA5B,GAAgC,CADvC;AAEJC,MAAAA,QAAQ,EAAEb,QAAQ,CAACc,eAFf;AAGJC,MAAAA,UAAU,EAAEf,QAAQ,CAACgB,iBAHjB;AAIJC,MAAAA,UAAU,EAAEjB,QAAQ,CAACkB,iBAJjB;AAKJC,MAAAA,KAAK,EAAEnB,QAAQ,CAACoB,YALZ;AAMJC,MAAAA,eAAe,EAAE;AANb,KATD;AAiBLC,IAAAA,WAAW,EAAE;AACXZ,MAAAA,SAAS,EAAEC,QAAQ,CAACC,EAAT,KAAgB,SAAhB,GAA4B,CAA5B,GAAgC;AADhC,KAjBR;AAoBLW,IAAAA,QAAQ,EAAE;AACRF,MAAAA,eAAe,EAAErB,QAAQ,CAACwB,0BADlB;AAERC,MAAAA,YAAY,EAAE;AAFN,KApBL;AAwBLC,IAAAA,KAAK,EAAE;AACLL,MAAAA,eAAe,EAAErB,QAAQ,CAAC2B;AADrB,KAxBF;AA2BLC,IAAAA,SAAS,EAAE;AACTT,MAAAA,KAAK,EAAEnB,QAAQ,CAAC6B;AADP,KA3BN;AA8BLC,IAAAA,YAAY,EAAE;AACZX,MAAAA,KAAK,EAAEnB,QAAQ,CAAC+B;AADJ,KA9BT;AAiCLC,IAAAA,YAAY,EAAE;AACZb,MAAAA,KAAK,EAAEnB,QAAQ,CAACiC;AADJ,KAjCT;AAoCLC,IAAAA,GAAG,EAAE;AAEH3B,MAAAA,MAAM,EAAE,CAFL;AAGH4B,MAAAA,cAAc,EAAE,CAHb;AAKHC,MAAAA,OAAO,EAAE;AALN,KApCA;AA2CLC,IAAAA,UAAU,EAAE;AACV/B,MAAAA,KAAK,EAAE,CADG;AAEVC,MAAAA,MAAM,EAAE,CAFE;AAGVG,MAAAA,SAAS,EAAE,CAHD;AAIV4B,MAAAA,WAAW,EAAE,CAAC;AAJJ,KA3CP;AAiDLC,IAAAA,WAAW,EAAE;AACXjC,MAAAA,KAAK,EAAE,CADI;AAEXC,MAAAA,MAAM,EAAE,CAFG;AAGXG,MAAAA,SAAS,EAAE,CAHA;AAIX8B,MAAAA,UAAU,EAAE,CAAC;AAJF,KAjDR;AAuDLC,IAAAA,OAAO,EAAE;AACPhB,MAAAA,YAAY,EAAE;AADP,KAvDJ;AA0DLiB,IAAAA,UAAU,EAAE;AACVN,MAAAA,OAAO,EAAE,CADC;AAEVf,MAAAA,eAAe,EAAErB,QAAQ,CAAC2C;AAFhB,KA1DP;AA8DLC,IAAAA,WAAW,EAAE;AACXvB,MAAAA,eAAe,EAAErB,QAAQ,CAAC6C;AADf,KA9DR;AAiELC,IAAAA,cAAc,EAAE;AACdxC,MAAAA,KAAK,EAAE,EADO;AAEdC,MAAAA,MAAM,EAAE,CAFM;AAGdG,MAAAA,SAAS,EAAE,CAHG;AAIde,MAAAA,YAAY,EAAE,CAJA;AAKdW,MAAAA,OAAO,EAAE;AALK;AAjEX,KAwEDrC,KAAK,CAACF,aAAD,CAAL,IAAwB,EAxEvB,EAAP;AA0ED","sourcesContent":["import {StyleSheet, Platform} from 'react-native';\nimport * as defaultStyle from '../../../style';\n\n\nconst STYLESHEET_ID = 'stylesheet.day.basic';\n\nexport default function styleConstructor(theme = {}) {\n  const appStyle = {...defaultStyle, ...theme};\n  return StyleSheet.create({\n    container: {\n      alignSelf: 'stretch'\n    },\n    base: {\n      width: 32,\n      height: 32,\n      alignItems: 'center'\n    },\n    text: {\n      marginTop: Platform.OS === 'android' ? 4 : 6,\n      fontSize: appStyle.textDayFontSize,\n      fontFamily: appStyle.textDayFontFamily,\n      fontWeight: appStyle.textDayFontWeight,\n      color: appStyle.dayTextColor,\n      backgroundColor: 'rgba(255, 255, 255, 0)'\n    },\n    alignedText: {\n      marginTop: Platform.OS === 'android' ? 4 : 6\n    },\n    selected: {\n      backgroundColor: appStyle.selectedDayBackgroundColor,\n      borderRadius: 16\n    },\n    today: {\n      backgroundColor: appStyle.todayBackgroundColor\n    },\n    todayText: {\n      color: appStyle.todayTextColor\n    },\n    selectedText: {\n      color: appStyle.selectedDayTextColor\n    },\n    disabledText: {\n      color: appStyle.textDisabledColor\n    },\n    dot: {\n      // width: 42,\n      height: 4,\n      marginVertical: 1,\n      // borderRadius: 2,\n      opacity: 0\n    },\n    leftFiller: {\n      width: 4,\n      height: 4,\n      marginTop: 1,\n      marginRight: -2\n    },\n    rightFiller: {\n      width: 4,\n      height: 4,\n      marginTop: 1,\n      marginLeft: -2\n    },\n    rounded: {\n      borderRadius: 2\n    },\n    visibleDot: {\n      opacity: 1,\n      backgroundColor: appStyle.dotColor\n    },\n    selectedDot: {\n      backgroundColor: appStyle.selectedDotColor\n    },\n    startingPeriod: {\n      width: 18,\n      height: 4,\n      marginTop: 1,\n      borderRadius: 2,\n      opacity: 0\n    },\n    ...(theme[STYLESHEET_ID] || {})\n  });\n}\n"]},"metadata":{},"sourceType":"module"}